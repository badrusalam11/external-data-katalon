name: Build and Release JAR

on:
  push:
    tags:
      - 'v*'  # e.g., v1.0.0

permissions:
  contents: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: ‚òï Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: üõ†Ô∏è Grant permission to Gradle
        run: chmod +x ./gradlew

      - name: üß± Build with Gradle
        run: ./gradlew clean build

      - name: üì¶ Prepare release artifacts
        run: |
          # Make sure the JAR is there
          echo "Contents of build/libs:"  
          ls -lh build/libs

          # Prepare release directory
          mkdir -p release

          # Pick up exactly one JAR (you can customize the pattern if needed)
          JAR_PATH=$(ls build/libs/external-data-katalon-*.jar | head -n1)
          echo "Found JAR at $JAR_PATH"

          # Rename the JAR to match the tag
          RELEASE_JAR_NAME="external-data-katalon-${{ github.ref_name }}.jar"
          cp "$JAR_PATH" "release/$RELEASE_JAR_NAME"

          # Create ZIP
          cd release
          zip "external-data-katalon-${{ github.ref_name }}.zip" "$RELEASE_JAR_NAME"

          # List what we're uploading
          ls -lh

      - name: üöÄ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: RELEASE_NOTE.md
          files: release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
